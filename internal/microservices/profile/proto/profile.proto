syntax = "proto3";

option go_package = "/";

//protoc --go_out=. --go-grpc_opt=require_unimplemented_servers=false --go-grpc_out=. *.proto

package profile;

message ProfileData {
  string Name = 1;
  string Surname = 2;
  string Email = 3;
  string Avatar = 4;
  string Date = 5;
  bool Main = 6;
  bool Adult = 7;
}

message EditProfileData {
  int64 ID = 1;
  string Name = 2;
  string Surname = 3;
  string Password = 4;
  string Date = 5;
}

message EditAvatarData {
  int64 ID = 1;
  string Avatar = 2;
}

message UploadInputFile {
  int64 ID = 1;
  bytes File = 2;
  int64 Size = 3;
  string ContentType = 4;
  string BucketName = 5;
}

message FileName {
  string name = 1;
}

message UserID {
  int64 ID = 1;
}

message AddToFamily {
  int64 ID = 1;
  string Email = 2;
  bool IsAdult = 3;
}

message MemberData {
  int64 IDFamily = 1;
  int64 IDMainUser = 2;
  string Name = 3;
  string Avatar = 4;
}

message ResponseMemberData {
  int64 ID = 1;
  string Name = 2;
  string Avatar = 3;
  bool IsAdult = 4;
  bool IsUser = 5;
}

message ResponseMemberDataArr {
  repeated ResponseMemberData ResponseMemberData = 1;
}

message HasFamilyResp {
  bool Has = 1;
  int64 IDMainUser = 2;
  int64 IDFamily = 3;
}

message Delete {
  UserID UserID = 1;
  UserID UserToDelete = 2;
}

message EmailData {
  string Email = 1;
}

message Exists {
  bool Exists = 1;
}

message Medicine {
  string Image = 1;
  string Name = 2;
  bool IsTablets = 3;
  int64 Count = 4;
}

message DeleteMed {
  int64 MedicineID = 1;
}

message AddMed {
  int64 UserID = 1;
  Medicine Medicine = 2;
}

message GetMedicineData {
  int64 ID = 1;
  Medicine Medicine = 2;
}

message MedicineArr {
  repeated GetMedicineData MedicineArr = 1;
}

message Empty { }

service Profile {
  rpc GetUserProfile(UserID) returns(ProfileData) {}
  rpc EditProfile(EditProfileData) returns(Empty) {}
  rpc EditAvatar(EditAvatarData) returns(Empty) {}
  rpc UploadAvatar(UploadInputFile) returns(FileName) {}
  rpc GetAvatar(UserID) returns(FileName) {}
  rpc AcceptInvitationToFamily(AddToFamily) returns(Empty) {}
  rpc CreateFamily(UserID) returns(Empty) {}
  rpc DeleteFamily(UserID) returns(Empty) {}
  rpc DeleteFromFamily(Delete) returns(Empty) {}
  rpc DeleteMember(Delete) returns(Empty) {}
  rpc AddMember(MemberData) returns(Empty) {}
  rpc GetFamily(UserID) returns(ResponseMemberDataArr) {}
  rpc HasFamily(UserID) returns(HasFamilyResp) {}
  rpc UserExists(EmailData) returns(Exists) {}
  rpc AddMedicine(AddMed) returns(Empty) {}
  rpc DeleteMedicine(DeleteMed) returns(Empty) {}
  rpc GetMedicine(UserID) returns(MedicineArr) {}
  rpc EditMedicine(GetMedicineData) returns(Empty) {}
}
